{
  "contractName": "Orbit",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "stakedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"stakedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"stake(uint256)\":{\"notice\":\"Stake amount and burn it\"},\"unstake(uint256)\":{\"notice\":\"Unstake amount and mint it\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Orbit.sol\":\"Orbit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC20/ERC20.sol\":{\"keccak256\":\"0x1a3cb73746d78fbdc1facc656389c57b217727057711e368f750431f60b6b52e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf63b6be743124552b8a76467b814037db412ac30042d6b2e44a713728512c6b\",\"dweb:/ipfs/QmZ6zsqx9MLaAYQ7x1s7x4XSGLLpoQbSMH4GZA5kBBkbY5\"]},\"project:/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0xaf1bc1524413c033dd7c19b7a2fcdee23d812255f0cb8d747cbb8a56b3f2322c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ebf483ee140e28fc37225ee86ad18069a69c5a21b3761c908cb8180ec2697a9\",\"dweb:/ipfs/QmT2YHQkD8nyNWwfaotue8yH4QE2CCTdkoLF5GMoTMy72Q\"]},\"project:/contracts/Orbit.sol\":{\"keccak256\":\"0xf5471ff1253958b2d23ee85c70d3561fe61c45be39b051f5cf1c1079bc16fe90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f331ae6555885921361928e45e9aa058d7891bce435f30180a50510d621098c\",\"dweb:/ipfs/QmQmFBH3BozeAGDij4FNX9crFXzDRAq9N8HBJmtu7c5b42\"]},\"project:/contracts/Stakeable.sol\":{\"keccak256\":\"0x9b35e65e5a7a6a55340ca86b0531c4e079be9791f950a915c7a9991855c23c5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5ea77385ca33e30969106a497e88ee1d5cfbf6e2108511a82c7ad9e648ee0f6\",\"dweb:/ipfs/QmU2FFMC1FuAniKFNEh3VxjgBX3eCeKGvpFXxtHcWXnQSQ\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x19a355609960ccd2ff52838c977ebacf654bdc7c1100615050d9ea589d03f344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bcc39438a4c377b08e68f086ce65489fd54eb8f1d0b0ce6c47d8a29e26b7b74\",\"dweb:/ipfs/QmWTC8TXVKyB3hpzHAMdXE11RHxJmeYLLGHSgYJo2YDye2\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063313ce56711610097578063a457c2d711610066578063a457c2d714610489578063a694fc3a146104ed578063a9059cbb1461051b578063dd62ed3e1461057f576100f5565b8063313ce56714610329578063395093511461034a57806370a08231146103ae57806395d89b4114610406576100f5565b806316765391116100d3578063167653911461020157806318160ddd1461025957806323b872dd146102775780632e17de78146102fb576100f5565b806306fdde03146100fa578063095ea7b31461017d5780631249c58b146101e1575b600080fd5b6101026105f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c96004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610699565b60405180821515815260200191505060405180910390f35b6101e96106b7565b60405180821515815260200191505060405180910390f35b6102436004803603602081101561021757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cc565b6040518082815260200191505060405180910390f35b610261610738565b6040518082815260200191505060405180910390f35b6102e36004803603606081101561028d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610742565b60405180821515815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061081b565b005b610331610892565b604051808260ff16815260200191505060405180910390f35b6103966004803603604081101561036057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a9565b60405180821515815260200191505060405180910390f35b6103f0600480360360208110156103c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095c565b6040518082815260200191505060405180910390f35b61040e6109a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561044e578082015181840152602081019050610433565b50505050905090810190601f16801561047b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104d56004803603604081101561049f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a46565b60405180821515815260200191505060405180910390f35b6105196004803603602081101561050357600080fd5b8101908080359060200190929190505050610b13565b005b6105676004803603604081101561053157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b89565b60405180821515815260200191505060405180910390f35b6105e16004803603604081101561059557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba7565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b5050505050905090565b60006106ad6106a6610cb6565b8484610cbe565b6001905092915050565b60006106c5336103e8610eb5565b6001905090565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006818154811061071e57fe5b906000526020600020906003020160010154915050919050565b6000600254905090565b600061074f84848461107c565b6108108461075b610cb6565b61080b85604051806060016040528060288152602001611b0360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107c1610cb6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133d9092919063ffffffff16565b610cbe565b600190509392505050565b610824336106cc565b81111561087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611ac9603a913960400191505060405180910390fd5b610885816113f7565b61088f3382610eb5565b50565b6000600560009054906101000a900460ff16905090565b60006109526108b6610cb6565b8461094d85600160006108c7610cb6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2e90919063ffffffff16565b610cbe565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a3c5780601f10610a1157610100808354040283529160200191610a3c565b820191906000526020600020905b815481529060010190602001808311610a1f57829003601f168201915b5050505050905090565b6000610b09610a53610cb6565b84610b0485604051806060016040528060258152602001611bba6025913960016000610a7d610cb6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133d9092919063ffffffff16565b610cbe565b6001905092915050565b610b1c3361095c565b8110610b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611b716025913960400191505060405180910390fd5b610b7c81611565565b610b863382611718565b50565b6000610b9d610b96610cb6565b848461107c565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611b966024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a816022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b610f64600083836118dc565b610f7981600254610c2e90919063ffffffff16565b600281905550610fd0816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611102576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611b4c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611188576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a3c6023913960400191505060405180910390fd5b6111938383836118dc565b6111fe81604051806060016040528060268152602001611aa3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611291816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113af578082015181840152602081019050611394565b50505050905090810190601f1680156113dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6000811161146d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f7420756e7374616b65206e6f7468696e670000000000000000000081525060200191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060004290506000600683815481106114c557fe5b9060005260206000209060030201600101549050838103600684815481106114e957fe5b9060005260206000209060030201600101819055503373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed85600003858560405180848152602001838152602001828152602001935050505060405180910390a250505050565b600081116115db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43616e6e6f74207374616b65206e6f7468696e6700000000000000000000000081525060200191505060405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000429050600082141561163957611636336118e1565b91505b60006006838154811061164857fe5b9060005260206000209060030201600101549050600081141561166d57839050611691565b836006848154811061167b57fe5b9060005260206000209060030201600101540190505b806006848154811061169f57fe5b9060005260206000209060030201600101819055503373ffffffffffffffffffffffffffffffffffffffff167fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed85858560405180848152602001838152602001828152602001935050505060405180910390a250505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561179e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b2b6021913960400191505060405180910390fd5b6117aa826000836118dc565b61181581604051806060016040528060228152602001611a5f602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133d9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061186c816002546119b890919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600060066001816001815401808255809150500390600052602060002090505060006001600680549050039050826006828154811061191c57fe5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080915050919050565b600082821115611a30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654f726269743a2043616e6e6f7420756e7374616b65206d6f7265207468616e20796f75722063757272656e74207374616b656420616d6f756e7445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573734f726269743a2043616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e45524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208ea374a7b0df723245036d679c6212e5864404f9b9941210343646200947101f64736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "112:1031:2:-:0;;;153:129;;;;;;;;;;1941:137:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:5;2007;:13;;;;;;;;;;;;:::i;:::-;;2040:7;2030;:17;;;;;;;;;;;;:::i;:::-;;2069:2;2057:9;;:14;;;;;;;;;;;;;;;;;;1941:137;;301:12:3;:19;;;;;;;;;;;;;;;;;;;;;;;199:17:2::1;214:1;199:14;;;:17;;:::i;:::-;226:49;232:10;262;:8;;;:10;;:::i;:::-;254:19;;250:2;:23;244:2;:30;226:5;;;:49;;:::i;:::-;112:1031:::0;;10597:96:0;10677:9;10665;;:21;;;;;;;;;;;;;;;;;;10597:96;:::o;3061:89::-;3110:5;3134:9;;;;;;;;;;;3127:16;;3061:89;:::o;8347:370::-;8449:1;8430:21;;:7;:21;;;;8422:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8498:49;8527:1;8531:7;8540:6;8498:20;;;:49;;:::i;:::-;8573:24;8590:6;8573:12;;:16;;;;;;:24;;;;:::i;:::-;8558:12;:39;;;;8628:30;8651:6;8628:9;:18;8638:7;8628:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8607:9;:18;8617:7;8607:18;;;;;;;;;;;;;;;:51;;;;8694:7;8673:37;;8690:1;8673:37;;;8703:6;8673:37;;;;;;;;;;;;;;;;;;8347:370;;:::o;11280:121::-;;;;:::o;2822:175:4:-;2880:7;2899:9;2915:1;2911;:5;2899:17;;2939:1;2934;:6;;2926:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:1;2982:8;;;2822:175;;;;:::o;112:1031:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "112:1031:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:89:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4343:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;288:99:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2872:164:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3210:106:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5012:439;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;797:344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3061:89:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5846:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3374:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2345:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6622:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;448:286:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3746:208:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4012:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2143:89;2188:13;2220:5;2213:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:89;:::o;4343:202::-;4458:4;4478:39;4487:12;:10;:12::i;:::-;4501:7;4510:6;4478:8;:39::i;:::-;4534:4;4527:11;;4343:202;;;;:::o;288:99:2:-;320:4;336:23;342:10;354:4;336:5;:23::i;:::-;376:4;369:11;;288:99;:::o;2872:164:3:-;2934:7;2953:14;2970:6;:14;2977:6;2970:14;;;;;;;;;;;;;;;;2953:31;;3002:12;3015:6;3002:20;;;;;;;;;;;;;;;;;;:27;;;2995:34;;;2872:164;;;:::o;3210:106:0:-;3271:7;3297:12;;3290:19;;3210:106;:::o;5012:439::-;5148:4;5164:36;5174:6;5182:9;5193:6;5164:9;:36::i;:::-;5210:213;5232:6;5252:12;:10;:12::i;:::-;5278:135;5333:6;5278:135;;;;;;;;;;;;;;;;;:11;:19;5290:6;5278:19;;;;;;;;;;;;;;;:33;5298:12;:10;:12::i;:::-;5278:33;;;;;;;;;;;;;;;;:37;;:135;;;;;:::i;:::-;5210:8;:213::i;:::-;5440:4;5433:11;;5012:439;;;;;:::o;797:344:2:-;958:27;974:10;958:15;:27::i;:::-;947:7;:38;;926:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:17;1089:7;1080:8;:17::i;:::-;1108:26;1114:10;1126:7;1108:5;:26::i;:::-;797:344;:::o;3061:89:0:-;3110:5;3134:9;;;;;;;;;;;3127:16;;3061:89;:::o;5846:289::-;5958:4;5978:129;6000:12;:10;:12::i;:::-;6026:7;6047:50;6086:10;6047:11;:25;6059:12;:10;:12::i;:::-;6047:25;;;;;;;;;;;;;;;:34;6073:7;6047:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5978:8;:129::i;:::-;6124:4;6117:11;;5846:289;;;;:::o;3374:169::-;3488:7;3518:9;:18;3528:7;3518:18;;;;;;;;;;;;;;;;3511:25;;3374:169;;;:::o;2345:93::-;2392:13;2424:7;2417:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2345:93;:::o;6622:386::-;6739:4;6759:221;6781:12;:10;:12::i;:::-;6807:7;6828:142;6884:15;6828:142;;;;;;;;;;;;;;;;;:11;:25;6840:12;:10;:12::i;:::-;6828:25;;;;;;;;;;;;;;;:34;6854:7;6828:34;;;;;;;;;;;;;;;;:38;;:142;;;;;:::i;:::-;6759:8;:221::i;:::-;6997:4;6990:11;;6622:386;;;;:::o;448:286:2:-;580:21;590:10;580:9;:21::i;:::-;570:7;:31;549:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:15;682:7;675:6;:15::i;:::-;701:26;707:10;719:7;701:5;:26::i;:::-;448:286;:::o;3746:208:0:-;3864:4;3884:42;3894:12;:10;:12::i;:::-;3908:9;3919:6;3884:9;:42::i;:::-;3943:4;3936:11;;3746:208;;;;:::o;4012:193::-;4141:7;4171:11;:18;4183:5;4171:18;;;;;;;;;;;;;;;:27;4190:7;4171:27;;;;;;;;;;;;;;;;4164:34;;4012:193;;;;:::o;2822:175:4:-;2880:7;2899:9;2915:1;2911;:5;2899:17;;2939:1;2934;:6;;2926:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:1;2982:8;;;2822:175;;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;9904:370:0:-;10052:1;10035:19;;:5;:19;;;;10027:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10132:1;10113:21;;:7;:21;;;;10105:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10214:6;10184:11;:18;10196:5;10184:18;;;;;;;;;;;;;;;:27;10203:7;10184:27;;;;;;;;;;;;;;;:36;;;;10251:7;10235:32;;10244:5;10235:32;;;10260:6;10235:32;;;;;;;;;;;;;;;;;;9904:370;;;:::o;8347:::-;8449:1;8430:21;;:7;:21;;;;8422:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8498:49;8527:1;8531:7;8540:6;8498:20;:49::i;:::-;8573:24;8590:6;8573:12;;:16;;:24;;;;:::i;:::-;8558:12;:39;;;;8628:30;8651:6;8628:9;:18;8638:7;8628:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8607:9;:18;8617:7;8607:18;;;;;;;;;;;;;;;:51;;;;8694:7;8673:37;;8690:1;8673:37;;;8703:6;8673:37;;;;;;;;;;;;;;;;;;8347:370;;:::o;7482:594::-;7635:1;7617:20;;:6;:20;;;;7609:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:1;7697:23;;:9;:23;;;;7689:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7771:47;7792:6;7800:9;7811:6;7771:20;:47::i;:::-;7849:105;7884:6;7849:105;;;;;;;;;;;;;;;;;:9;:17;7859:6;7849:17;;;;;;;;;;;;;;;;:21;;:105;;;;;:::i;:::-;7829:9;:17;7839:6;7829:17;;;;;;;;;;;;;;;:125;;;;7987:32;8012:6;7987:9;:20;7997:9;7987:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7964:9;:20;7974:9;7964:20;;;;;;;;;;;;;;;:55;;;;8051:9;8034:35;;8043:6;8034:35;;;8062:6;8034:35;;;;;;;;;;;;;;;;;;7482:594;;;:::o;5564:193:4:-;5680:7;5712:1;5707;:6;;5715:12;5699:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5749:1;5745;:5;5738:12;;5564:193;;;;;:::o;2493:373:3:-;2565:1;2555:7;:11;2547:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:14;2620:6;:18;2627:10;2620:18;;;;;;;;;;;;;;;;2603:35;;2649:17;2669:15;2649:35;;2695:14;2712:12;2725:6;2712:20;;;;;;;;;;;;;;;;;;:27;;;2695:44;;2789:7;2780:6;:16;2750:12;2763:6;2750:20;;;;;;;;;;;;;;;;;;:27;;:46;;;;2819:10;2812:47;;;2832:7;2831:8;;2841:6;2849:9;2812:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:373;;;;:::o;1164:1323::-;1288:1;1278:7;:11;1270:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:13;1437:6;:18;1444:10;1437:18;;;;;;;;;;;;;;;;1421:34;;1552:17;1572:15;1552:35;;1691:1;1682:5;:10;1678:330;;;1970:27;1986:10;1970:15;:27::i;:::-;1962:35;;1678:330;2135:14;2152:12;2165:5;2152:19;;;;;;;;;;;;;;;;;;:26;;;2135:43;;2202:1;2192:6;:11;2188:134;;;2228:7;2219:16;;2188:134;;;2304:7;2275:12;2288:5;2275:19;;;;;;;;;;;;;;;;;;:26;;;:36;2266:45;;2188:134;2361:6;2332:12;2345:5;2332:19;;;;;;;;;;;;;;;;;;:26;;:35;;;;2442:10;2435:45;;;2454:7;2463:5;2470:9;2435:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1164:1323;;;;:::o;9037:444:0:-;9139:1;9120:21;;:7;:21;;;;9112:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9190:49;9211:7;9228:1;9232:6;9190:20;:49::i;:::-;9271:102;9307:6;9271:102;;;;;;;;;;;;;;;;;:9;:18;9281:7;9271:18;;;;;;;;;;;;;;;;:22;;:102;;;;;:::i;:::-;9250:9;:18;9260:7;9250:18;;;;;;;;;;;;;;;:123;;;;9398:24;9415:6;9398:12;;:16;;:24;;;;:::i;:::-;9383:12;:39;;;;9463:1;9437:37;;9446:7;9437:37;;;9467:6;9437:37;;;;;;;;;;;;;;;;;;9037:444;;:::o;11280:121::-;;;;:::o;654:504:3:-;713:7;812:12;:19;;;;;;;;;;;;;;;;;;;;;;;911:17;953:1;931:12;:19;;;;:23;911:43;;1042:6;1011:12;1024:9;1011:23;;;;;;;;;;;;;;;;;;:28;;;:37;;;;;;;;;;;;;;;;;;1116:9;1099:6;:14;1106:6;1099:14;;;;;;;;;;;;;;;:26;;;;1142:9;1135:16;;;654:504;;;:::o;3268:155:4:-;3326:7;3358:1;3353;:6;;3345:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3415:1;3411;:5;3404:12;;3268:155;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./ERC20/ERC20.sol\";\nimport \"./Stakeable.sol\";\n\ncontract Orbit is ERC20, Stakeable {\n    constructor() ERC20(\"Orbit\", \"ORB\") {\n        _setupDecimals(2);\n        _mint(msg.sender, 10 * (10**uint256(decimals())));\n    }\n\n    function mint() public returns (bool) {\n        _mint(msg.sender, 1000);\n        return true;\n    }\n\n    /**\n     * Stake amount and burn it\n     *\n     */\n    function stake(uint256 _amount) public {\n        // Make sure staker actually is good for it\n        require(\n            _amount < balanceOf(msg.sender),\n            \"Orbit: Cannot stake more than you own\"\n        );\n\n        _stake(_amount);\n\n        _burn(msg.sender, _amount);\n    }\n\n    /**\n     * Unstake amount and mint it\n     *\n     */\n    function unstake(uint256 _amount) public {\n        // Make sure staked balance is bigger or equal to the withdraw amount\n        require(\n            _amount <= stakedBalanceOf(msg.sender),\n            \"Orbit: Cannot unstake more than your current staked amount\"\n        );\n\n        _unstake(_amount);\n\n        _mint(msg.sender, _amount);\n    }\n}\n",
  "sourcePath": "/home/dexter/workspace/orbit-staking/contracts/Orbit.sol",
  "ast": {
    "absolutePath": "project:/contracts/Orbit.sol",
    "exportedSymbols": {
      "Orbit": [
        684
      ]
    },
    "id": 685,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 582,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "project:/contracts/ERC20/ERC20.sol",
        "file": "./ERC20/ERC20.sol",
        "id": 583,
        "nodeType": "ImportDirective",
        "scope": 685,
        "sourceUnit": 503,
        "src": "57:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Stakeable.sol",
        "file": "./Stakeable.sol",
        "id": 584,
        "nodeType": "ImportDirective",
        "scope": 685,
        "sourceUnit": 904,
        "src": "85:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 585,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 502,
              "src": "130:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$502",
                "typeString": "contract ERC20"
              }
            },
            "id": 586,
            "nodeType": "InheritanceSpecifier",
            "src": "130:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 587,
              "name": "Stakeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 903,
              "src": "137:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Stakeable_$903",
                "typeString": "contract Stakeable"
              }
            },
            "id": 588,
            "nodeType": "InheritanceSpecifier",
            "src": "137:9:2"
          }
        ],
        "contractDependencies": [
          502,
          580,
          903,
          1281
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 684,
        "linearizedBaseContracts": [
          684,
          903,
          502,
          580,
          1281
        ],
        "name": "Orbit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "189:93:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "214:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 595,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "199:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "199:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "199:17:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "232:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "232:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "244:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "250:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 606,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "262:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "262:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 605,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "254:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 604,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "254:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "254:19:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "250:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 610,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "249:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "244:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 599,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "226:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "226:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "226:49:2"
                }
              ]
            },
            "documentation": null,
            "id": 615,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4f72626974",
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "173:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b618ddbb8cff592f816420b992a8ed120a50f01abafe8389bf250e09a9bf598",
                      "typeString": "literal_string \"Orbit\""
                    },
                    "value": "Orbit"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4f5242",
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "182:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b60dfd2d76b37248d06a548f402532200b7a08f600ece90f63c05723c91cf2a8",
                      "typeString": "literal_string \"ORB\""
                    },
                    "value": "ORB"
                  }
                ],
                "id": 593,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 590,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 502,
                  "src": "167:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$502_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "167:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:2"
            },
            "returnParameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:2"
            },
            "scope": 684,
            "src": "153:129:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "326:61:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 621,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "342:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "342:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030",
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "354:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 620,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "336:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "336:23:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "376:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 619,
                  "id": 627,
                  "nodeType": "Return",
                  "src": "369:11:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:2"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "320:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:6:2"
            },
            "scope": 684,
            "src": "288:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "487:247:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 636,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 632,
                          "src": "570:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 638,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "590:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "590:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 637,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "580:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "570:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f726269743a2043616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "615:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8eb7fb571d718e8a8786603f76c4c4ab2004c8cee34ae0beede5adb4008f059",
                          "typeString": "literal_string \"Orbit: Cannot stake more than you own\""
                        },
                        "value": "Orbit: Cannot stake more than you own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8eb7fb571d718e8a8786603f76c4c4ab2004c8cee34ae0beede5adb4008f059",
                          "typeString": "literal_string \"Orbit: Cannot stake more than you own\""
                        }
                      ],
                      "id": 635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "549:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "549:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "549:115:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "682:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 645,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "675:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "675:15:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "707:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "707:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "719:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 649,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "701:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "701:26:2"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "393:50:2",
              "text": " Stake amount and burn it"
            },
            "functionSelector": "a694fc3a",
            "id": 656,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 656,
                  "src": "463:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:17:2"
            },
            "returnParameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:2"
            },
            "scope": 684,
            "src": "448:286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 682,
              "nodeType": "Block",
              "src": "838:303:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 663,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "947:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 665,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "974:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "974:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 664,
                            "name": "stakedBalanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "958:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "947:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f726269743a2043616e6e6f7420756e7374616b65206d6f7265207468616e20796f75722063757272656e74207374616b656420616d6f756e74",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "999:60:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6588a84aca02ae1d2ad5da6e8b1f847a2d616a4025ddd00862c657ff14af908c",
                          "typeString": "literal_string \"Orbit: Cannot unstake more than your current staked amount\""
                        },
                        "value": "Orbit: Cannot unstake more than your current staked amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6588a84aca02ae1d2ad5da6e8b1f847a2d616a4025ddd00862c657ff14af908c",
                          "typeString": "literal_string \"Orbit: Cannot unstake more than your current staked amount\""
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "926:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:143:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "926:143:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1089:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 672,
                      "name": "_unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "1080:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:17:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 677,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1114:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1114:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 679,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 676,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "1108:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:26:2"
                }
              ]
            },
            "documentation": {
              "id": 657,
              "nodeType": "StructuredDocumentation",
              "src": "740:52:2",
              "text": " Unstake amount and mint it"
            },
            "functionSelector": "2e17de78",
            "id": 683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 683,
                  "src": "814:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "813:17:2"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:2"
            },
            "scope": 684,
            "src": "797:344:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 685,
        "src": "112:1031:2"
      }
    ],
    "src": "32:1112:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Orbit.sol",
      "exportedSymbols": {
        "Orbit": [
          684
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 582,
        "name": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 503,
          "absolutePath": "project:/contracts/ERC20/ERC20.sol",
          "file": "./ERC20/ERC20.sol",
          "scope": 685,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 583,
        "name": "ImportDirective",
        "src": "57:27:2"
      },
      {
        "attributes": {
          "SourceUnit": 904,
          "absolutePath": "project:/contracts/Stakeable.sol",
          "file": "./Stakeable.sol",
          "scope": 685,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 584,
        "name": "ImportDirective",
        "src": "85:25:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            502,
            580,
            903,
            1281
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            684,
            903,
            502,
            580,
            1281
          ],
          "name": "Orbit",
          "scope": 685
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 502,
                  "type": "contract ERC20"
                },
                "id": 585,
                "name": "UserDefinedTypeName",
                "src": "130:5:2"
              }
            ],
            "id": 586,
            "name": "InheritanceSpecifier",
            "src": "130:5:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Stakeable",
                  "referencedDeclaration": 903,
                  "type": "contract Stakeable"
                },
                "id": 587,
                "name": "UserDefinedTypeName",
                "src": "137:9:2"
              }
            ],
            "id": 588,
            "name": "InheritanceSpecifier",
            "src": "137:9:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 684,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 589,
                "name": "ParameterList",
                "src": "164:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 594,
                "name": "ParameterList",
                "src": "189:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 502,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 590,
                    "name": "Identifier",
                    "src": "167:5:2"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4f72626974",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Orbit\"",
                      "value": "Orbit"
                    },
                    "id": 591,
                    "name": "Literal",
                    "src": "173:7:2"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4f5242",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"ORB\"",
                      "value": "ORB"
                    },
                    "id": 592,
                    "name": "Literal",
                    "src": "182:5:2"
                  }
                ],
                "id": 593,
                "name": "ModifierInvocation",
                "src": "167:21:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 490,
                              "type": "function (uint8)",
                              "value": "_setupDecimals"
                            },
                            "id": 595,
                            "name": "Identifier",
                            "src": "199:14:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 596,
                            "name": "Literal",
                            "src": "214:1:2"
                          }
                        ],
                        "id": 597,
                        "name": "FunctionCall",
                        "src": "199:17:2"
                      }
                    ],
                    "id": 598,
                    "name": "ExpressionStatement",
                    "src": "199:17:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 599,
                            "name": "Identifier",
                            "src": "226:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 600,
                                "name": "Identifier",
                                "src": "232:3:2"
                              }
                            ],
                            "id": 601,
                            "name": "MemberAccess",
                            "src": "232:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 602,
                                "name": "Literal",
                                "src": "244:2:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 603,
                                        "name": "Literal",
                                        "src": "250:2:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": null
                                                },
                                                "id": 604,
                                                "name": "ElementaryTypeName",
                                                "src": "254:7:2"
                                              }
                                            ],
                                            "id": 605,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "254:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "uint8",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 78,
                                                  "type": "function () view returns (uint8)",
                                                  "value": "decimals"
                                                },
                                                "id": 606,
                                                "name": "Identifier",
                                                "src": "262:8:2"
                                              }
                                            ],
                                            "id": 607,
                                            "name": "FunctionCall",
                                            "src": "262:10:2"
                                          }
                                        ],
                                        "id": 608,
                                        "name": "FunctionCall",
                                        "src": "254:19:2"
                                      }
                                    ],
                                    "id": 609,
                                    "name": "BinaryOperation",
                                    "src": "250:23:2"
                                  }
                                ],
                                "id": 610,
                                "name": "TupleExpression",
                                "src": "249:25:2"
                              }
                            ],
                            "id": 611,
                            "name": "BinaryOperation",
                            "src": "244:30:2"
                          }
                        ],
                        "id": 612,
                        "name": "FunctionCall",
                        "src": "226:49:2"
                      }
                    ],
                    "id": 613,
                    "name": "ExpressionStatement",
                    "src": "226:49:2"
                  }
                ],
                "id": 614,
                "name": "Block",
                "src": "189:93:2"
              }
            ],
            "id": 615,
            "name": "FunctionDefinition",
            "src": "153:129:2"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "1249c58b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "overrides": null,
              "scope": 684,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 616,
                "name": "ParameterList",
                "src": "301:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 629,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 617,
                        "name": "ElementaryTypeName",
                        "src": "320:4:2"
                      }
                    ],
                    "id": 618,
                    "name": "VariableDeclaration",
                    "src": "320:4:2"
                  }
                ],
                "id": 619,
                "name": "ParameterList",
                "src": "319:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 620,
                            "name": "Identifier",
                            "src": "336:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 621,
                                "name": "Identifier",
                                "src": "342:3:2"
                              }
                            ],
                            "id": 622,
                            "name": "MemberAccess",
                            "src": "342:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1000",
                              "value": "1000"
                            },
                            "id": 623,
                            "name": "Literal",
                            "src": "354:4:2"
                          }
                        ],
                        "id": 624,
                        "name": "FunctionCall",
                        "src": "336:23:2"
                      }
                    ],
                    "id": 625,
                    "name": "ExpressionStatement",
                    "src": "336:23:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 619
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 626,
                        "name": "Literal",
                        "src": "376:4:2"
                      }
                    ],
                    "id": 627,
                    "name": "Return",
                    "src": "369:11:2"
                  }
                ],
                "id": 628,
                "name": "Block",
                "src": "326:61:2"
              }
            ],
            "id": 629,
            "name": "FunctionDefinition",
            "src": "288:99:2"
          },
          {
            "attributes": {
              "functionSelector": "a694fc3a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stake",
              "overrides": null,
              "scope": 684,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " Stake amount and burn it"
                },
                "id": 630,
                "name": "StructuredDocumentation",
                "src": "393:50:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "overrides": null,
                      "scope": 656,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 631,
                        "name": "ElementaryTypeName",
                        "src": "463:7:2"
                      }
                    ],
                    "id": 632,
                    "name": "VariableDeclaration",
                    "src": "463:15:2"
                  }
                ],
                "id": 633,
                "name": "ParameterList",
                "src": "462:17:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 634,
                "name": "ParameterList",
                "src": "487:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c8eb7fb571d718e8a8786603f76c4c4ab2004c8cee34ae0beede5adb4008f059",
                                  "typeString": "literal_string \"Orbit: Cannot stake more than you own\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 635,
                            "name": "Identifier",
                            "src": "549:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 632,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 636,
                                "name": "Identifier",
                                "src": "570:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 102,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "balanceOf"
                                    },
                                    "id": 637,
                                    "name": "Identifier",
                                    "src": "580:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 638,
                                        "name": "Identifier",
                                        "src": "590:3:2"
                                      }
                                    ],
                                    "id": 639,
                                    "name": "MemberAccess",
                                    "src": "590:10:2"
                                  }
                                ],
                                "id": 640,
                                "name": "FunctionCall",
                                "src": "580:21:2"
                              }
                            ],
                            "id": 641,
                            "name": "BinaryOperation",
                            "src": "570:31:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f726269743a2043616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Orbit: Cannot stake more than you own\"",
                              "value": "Orbit: Cannot stake more than you own"
                            },
                            "id": 642,
                            "name": "Literal",
                            "src": "615:39:2"
                          }
                        ],
                        "id": 643,
                        "name": "FunctionCall",
                        "src": "549:115:2"
                      }
                    ],
                    "id": 644,
                    "name": "ExpressionStatement",
                    "src": "549:115:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 833,
                              "type": "function (uint256)",
                              "value": "_stake"
                            },
                            "id": 645,
                            "name": "Identifier",
                            "src": "675:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 632,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 646,
                            "name": "Identifier",
                            "src": "682:7:2"
                          }
                        ],
                        "id": 647,
                        "name": "FunctionCall",
                        "src": "675:15:2"
                      }
                    ],
                    "id": 648,
                    "name": "ExpressionStatement",
                    "src": "675:15:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 434,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 649,
                            "name": "Identifier",
                            "src": "701:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 650,
                                "name": "Identifier",
                                "src": "707:3:2"
                              }
                            ],
                            "id": 651,
                            "name": "MemberAccess",
                            "src": "707:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 632,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 652,
                            "name": "Identifier",
                            "src": "719:7:2"
                          }
                        ],
                        "id": 653,
                        "name": "FunctionCall",
                        "src": "701:26:2"
                      }
                    ],
                    "id": 654,
                    "name": "ExpressionStatement",
                    "src": "701:26:2"
                  }
                ],
                "id": 655,
                "name": "Block",
                "src": "487:247:2"
              }
            ],
            "id": 656,
            "name": "FunctionDefinition",
            "src": "448:286:2"
          },
          {
            "attributes": {
              "functionSelector": "2e17de78",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "unstake",
              "overrides": null,
              "scope": 684,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " Unstake amount and mint it"
                },
                "id": 657,
                "name": "StructuredDocumentation",
                "src": "740:52:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "overrides": null,
                      "scope": 683,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 658,
                        "name": "ElementaryTypeName",
                        "src": "814:7:2"
                      }
                    ],
                    "id": 659,
                    "name": "VariableDeclaration",
                    "src": "814:15:2"
                  }
                ],
                "id": 660,
                "name": "ParameterList",
                "src": "813:17:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 661,
                "name": "ParameterList",
                "src": "838:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6588a84aca02ae1d2ad5da6e8b1f847a2d616a4025ddd00862c657ff14af908c",
                                  "typeString": "literal_string \"Orbit: Cannot unstake more than your current staked amount\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 662,
                            "name": "Identifier",
                            "src": "926:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 659,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 663,
                                "name": "Identifier",
                                "src": "947:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 902,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "stakedBalanceOf"
                                    },
                                    "id": 664,
                                    "name": "Identifier",
                                    "src": "958:15:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 665,
                                        "name": "Identifier",
                                        "src": "974:3:2"
                                      }
                                    ],
                                    "id": 666,
                                    "name": "MemberAccess",
                                    "src": "974:10:2"
                                  }
                                ],
                                "id": 667,
                                "name": "FunctionCall",
                                "src": "958:27:2"
                              }
                            ],
                            "id": 668,
                            "name": "BinaryOperation",
                            "src": "947:38:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f726269743a2043616e6e6f7420756e7374616b65206d6f7265207468616e20796f75722063757272656e74207374616b656420616d6f756e74",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Orbit: Cannot unstake more than your current staked amount\"",
                              "value": "Orbit: Cannot unstake more than your current staked amount"
                            },
                            "id": 669,
                            "name": "Literal",
                            "src": "999:60:2"
                          }
                        ],
                        "id": 670,
                        "name": "FunctionCall",
                        "src": "926:143:2"
                      }
                    ],
                    "id": 671,
                    "name": "ExpressionStatement",
                    "src": "926:143:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 883,
                              "type": "function (uint256)",
                              "value": "_unstake"
                            },
                            "id": 672,
                            "name": "Identifier",
                            "src": "1080:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 659,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 673,
                            "name": "Identifier",
                            "src": "1089:7:2"
                          }
                        ],
                        "id": 674,
                        "name": "FunctionCall",
                        "src": "1080:17:2"
                      }
                    ],
                    "id": 675,
                    "name": "ExpressionStatement",
                    "src": "1080:17:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 676,
                            "name": "Identifier",
                            "src": "1108:5:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 677,
                                "name": "Identifier",
                                "src": "1114:3:2"
                              }
                            ],
                            "id": 678,
                            "name": "MemberAccess",
                            "src": "1114:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 659,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 679,
                            "name": "Identifier",
                            "src": "1126:7:2"
                          }
                        ],
                        "id": 680,
                        "name": "FunctionCall",
                        "src": "1108:26:2"
                      }
                    ],
                    "id": 681,
                    "name": "ExpressionStatement",
                    "src": "1108:26:2"
                  }
                ],
                "id": 682,
                "name": "Block",
                "src": "838:303:2"
              }
            ],
            "id": 683,
            "name": "FunctionDefinition",
            "src": "797:344:2"
          }
        ],
        "id": 684,
        "name": "ContractDefinition",
        "src": "112:1031:2"
      }
    ],
    "id": 685,
    "name": "SourceUnit",
    "src": "32:1112:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x5c0B27EeF8b848B4d4B7E7237B62b13CcaA8da00",
      "transactionHash": "0x10352425cc0ee4f5c1869518995be683dbd087b27271355ab6a48dbe5b9c125f"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-20T16:35:24.379Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "stake(uint256)": {
        "notice": "Stake amount and burn it"
      },
      "unstake(uint256)": {
        "notice": "Unstake amount and mint it"
      }
    },
    "version": 1
  }
}